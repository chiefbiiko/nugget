# updates an aws cfn stack when eitherthe site's index.html, stack.yml, or this
# file itself is changed in the test branch. this template assumes that the
# corresponding stack has initially been created. Moreover, this template relies
# on two secrets: AWS_ACCESS_KEY_ID_TEST, AWS_SECRET_ACCESS_KEY_TEST. These must
# be the security credentials of the iam user included in the stack. Get the
# credentials from the iam console. Lastly, this template assumes that the
# stack is called $SITE_STACK_NAME - see env.
name: continous deployment

on:
  push:
    branches:
      - test
    paths:
      - stacks/site/*
      - .github/workflows/cd.yml

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
  AWS_REGION: eu-west-3
  SITE_STACK_NAME: nugget-website-stack
  MAIL_STACK_NAME: nugget-email-stack
  SECRET_PROVIDER_STACK_NAME: nugget-secret-provider
  SES_PROVIDER_STACK_NAME: nugget-ses-provider
  BUCKET_NAME: "<will be set by the deploy_site_stack job>"

jobs:
  # deploy_custom_resources:
  #   name: custom resources deployment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2.0.0
  #
  #     - name: deploy ses-provider custom resources
  #       run: |
  #         aws cloudformation deploy \
  #           --stack-name=${{ env.SES_PROVIDER_STACK_NAME }} \
  #           --template-file=./stacks/custom-resources/cfn-ses-provider/cloudformation/cfn-resource-provider.yaml \
  #           --capabilities=CAPABILITY_IAM
  #
  #     - name: deploy secret-provider custom resources
  #       run: |
  #         aws cloudformation deploy \
  #           --stack-name=${{ env.SECRET_PROVIDER_STACK_NAME }} \
  #           --template-file=./stacks/custom-resources/cfn-secret-provider/cloudformation/cfn-custom-resource-provider.json \
  #           --capabilities=CAPABILITY_IAM
  #
  # deploy_mail_stack:
  #   name: mail stack deployment
  #   needs: deploy_custom_resources
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: mail stack deployment
  #       run: |
  #         aws cloudformation deploy \
  #           --stack-name=${{ env.MAIL_STACK_NAME }} \
  #           --template-file=./stacks/mail/stack.yml \
  #           --parameters \
  #             ParameterKey=DomainName,ParameterValue=TODO \
  #             ParameterKey=HostedZoneId,ParameterValue=TODO \
  #             ParameterKey=FromEmail,ParameterValue=TODO \
  #             ParameterKey=ForwardMapping,ParameterValue=TODO \
  #             ParameterKey=EmailKeyPrefix,ParameterValue="" \
  #           --capabilities=CAPABILITY_IAM

  deploy_site_stack:
    name: site stack deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0

      - name: validate the cfn template
        run: aws cloudformation validate-template --template-body=file://stacks/site/stack.yml

      - name: deploy the web stack
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.SITE_STACK_NAME }} \
            --template-file=./stacks/site/stack.yml \
            --capabilities=CAPABILITY_IAM

      - name: determine the web stack's bucket name
        run: |
          _BUCKET_NAME="$( \
            aws cloudformation describe-stack-resources \
              --stack-name=${{ env.SITE_STACK_NAME }} \
            | \
            jq '.StackResources[] | select(.ResourceType == "AWS::S3::Bucket") | .PhysicalResourceId' \
          )"
          echo "::set-env name=BUCKET_NAME::$_BUCKET_NAME"

      - name: update the website content
        run: aws s3 cp ./stacks/site/index.html s3://${{ env.BUCKET_NAME }}/index.html