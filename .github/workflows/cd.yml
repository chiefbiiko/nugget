# TODO:
#2preset aws test n prod creds as github secrets!
#rewwrite docs

name: continous deployment

on:
  push:
    branches:
      - test
      - master
    paths:
      - stacks/**
      - .github/workflows/cd.yml

env:
  AWS_REGION: eu-west-3
  SITE_STACK_NAME: nugget-website-stack
  MAIL_STACK_NAME: nugget-email-stack
  SECRET_PROVIDER_STACK_NAME: nugget-secret-provider
  SES_PROVIDER_STACK_NAME: nugget-ses-provider
  SITE_BUCKET_NAME: nugget-website-stack-bucket-419
  MAIL_FUNCTION_NAME: nugget-email-stack-function-419
  SHARED_CREDENTIALS_FILE_TEMPLATE: "[default]\naws_access_key_id=%s\naws_secret_access_key=%s\n"

jobs:
  configure_aws_credentials:
    runs-on: ubuntu-latest
    steps:
      run: |
        if [[ ${{ github.ref }} == "master" ]]; then \
          printf \
            "$SHARED_CREDENTIALS_FILE_TEMPLATE" \
            ${{ secrets.AWS_ACCESS_KEY_ID_PROD }} \
            ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }} \
          > $HOME/.aws/credentials
        else
          printf \
            "$SHARED_CREDENTIALS_FILE_TEMPLATE" \
            ${{ secrets.AWS_ACCESS_KEY_ID_TEST }} \
            ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }} \
          > $HOME/.aws/credentials
        fi

  deploy_custom_resources:
    name: custom resources deployment
    if: endsWith(github.ref, 'master')
    needs: configure_aws_credentials
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0

      - name: deploy ses-provider custom resources
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.SES_PROVIDER_STACK_NAME }} \
            --template-file=./stacks/custom-resources/cfn-ses-provider/cloudformation/cfn-resource-provider.yaml \
            --capabilities=CAPABILITY_IAM

      - name: deploy secret-provider custom resources
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.SECRET_PROVIDER_STACK_NAME }} \
            --template-file=./stacks/custom-resources/cfn-secret-provider/cloudformation/cfn-custom-resource-provider.json \
            --capabilities=CAPABILITY_IAM

  deploy_mail_stack:
    name: mail stack deployment
    if: endsWith(github.ref, 'master')
    needs:
      - configure_aws_credentials
      - deploy_custom_resources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0

      - name: mail stack deployment
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.MAIL_STACK_NAME }} \
            --template-file=./stacks/mail/stack.yml \
            --parameter-overrides \
              DomainName=nugget.digital \
              HostedZoneId=TODO \
              FunctionName=${{ env.MAIL_FUNCTION_NAME }} \
              FromEmail=hello@nugget.digital \
              ForwardMapping='{"@nugget.digital":["nugget.digital@gmail.com"]}' \
              EmailKeyPrefix="" \
            --capabilities=CAPABILITY_IAM

      - name: update the lambda function
        run: |
          temp_zip=$(mktemp --suffix=.zip)
          zip -j $temp_zip ./stacks/mail/forwarder.js
          aws lambda update-function-code \
            --function-name=${{ env.MAIL_FUNCTION_NAME }} \
            --publish \
            --zip-file=fileb://$temp_zip

  deploy_site_stack:
    name: site stack deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0

      - name: validate the cfn template
        run: aws cloudformation validate-template --template-body=file://stacks/site/stack.yml

      - name: deploy the web stack
        run: |
          aws cloudformation deploy \
            --stack-name=${{ env.SITE_STACK_NAME }} \
            --template-file=./stacks/site/stack.yml \
            --parameter-overrides \
              BucketName=${{ env.SITE_BUCKET_NAME }} \
            --capabilities=CAPABILITY_IAM

      - name: update the website content
        run: aws s3 cp ./stacks/site/index.html s3://${{ env.SITE_BUCKET_NAME }}/index.html