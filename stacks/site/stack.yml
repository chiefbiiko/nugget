AWSTemplateFormatVersion: 2010-09-09
Description: website distribution stack using a route53 domain
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: DNS
        Parameters:
          - Domain
          - HostedZoneId
      - Label:
          default: CDN
        Parameters:
          - DefaultRootObject
          - DefaultTTL
          - MaxTTL
          - MinTTL
      - Label:
          default: Storage
        Parameters:
          - BucketName

Parameters:
  BucketName:
    Description: S3 bucket name
    Type: String

  Domain:
    Description: Route53 domain fx example.com
    Type: String

  HostedZoneId:
    Description: Route53 hosted zone id
    Type: AWS::Route53::HostedZone::Id

  DefaultTTL:
    Description: Default cache object TTL - default 1h
    Type: Number
    Default: 3600

  MaxTTL:
    Description: Maximum cache object TTL - default 2h
    Type: Number
    Default: 7200

  MinTTL:
    Description: Minimum cache object TTL - default 1/2h
    Type: Number
    Default: 1800

  DefaultRootObject:
    Description: Default root object path used by the CloudFront distribution
    Type: String
    Default: index.html

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CFS3OAI # required 4 some reason

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOriginAccessIdentity
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - !Sub arn:aws:s3:::${Bucket}
              - !Sub arn:aws:s3:::${Bucket}/*

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref Domain
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: !Ref DefaultTTL
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: !Ref MaxTTL
          MinTTL: !Ref MinTTL
          TargetOriginId: BucketOrigin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: !Ref DefaultRootObject
        Enabled: true
        # routing ipv6 traffic from Route53 to CloudFront would require an AAAA
        # alias record which carries along extra cost
        IPV6Enabled: false
        Origins:
          - DomainName: !GetAtt Bucket.DomainName
            Id: BucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          MinimumProtocolVersion: TLSv1.2_2018
          SSLSupportMethod: sni-only

  DistributionRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref Domain
      Type: A
      AliasTarget:
        # Below zone id is used for any CloudFront Distribution
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt Distribution.DomainName

  Certificate:
    Type: Custom::Certificate
    Properties:
      DomainName: !Ref Domain
      ValidationMethod: DNS
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider

  IssuedCertificate:
    Type: Custom::IssuedCertificate
    Properties:
      CertificateArn: !Ref Certificate
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider

  CertificateDNSRecord:
    Type: Custom::CertificateDNSRecord
    Properties:
      CertificateArn: !Ref Certificate
      DomainName: !Ref Domain
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider

  DomainValidationRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !GetAtt CertificateDNSRecord.Name
      Type: !GetAtt CertificateDNSRecord.Type
      TTL: 60
      Weight: 1
      SetIdentifier: !Ref Certificate
      ResourceRecords:
        - !GetAtt CertificateDNSRecord.Value

Outputs:
  DistributionDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt Distribution.DomainName

  CertificateArn:
    Description: ACM TLS certificate
    Value: !Ref Certificate

  URL:
    Description: URL of your website
    Value: !Sub https://${Domain}
